---
apiVersion: apps/v1
kind: Deployment                # Type of Kubernetes resource
metadata:
  name: k8i                     # Name of the Kubernetes resource
spec:
  replicas: 1                   # Number of pods to run at any given time
  selector:
    matchLabels:
      app: k8i                  # This deployment applies to any Pods matching the specified label
  template:                      # This deployment will create a set of pods using the configurations in this template
    metadata:
      labels:                    # The labels that will be applied to all of the pods in this deployment
        app: k8i
    spec:                        # Spec for the container which will run in the Pod
      containers:
      - name: k8i
        image: k3d-registry.localhost:12345/k8i:latest 
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 8080  # Should match the port number that the Go application listens on
        livenessProbe:           # To check the health of the Pod
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 1    
---
apiVersion: v1
kind: Service                    # Type of kubernetes resource
metadata:
  name: k8i   # Name of the resource
spec:
  type: NodePort                 # A port is opened on each node in your cluster via Kube proxy.
  ports:                         # Take incoming HTTP requests on port 9090 and forward them to the targetPort of 8080
  - name: http
    port: 9090
    targetPort: 8080
  selector:
    app: k8i                     # Map any pod with label `app=go-hello-world` to this service
